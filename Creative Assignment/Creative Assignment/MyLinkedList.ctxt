#BlueJ class context
comment0.target=MyLinkedList
comment1.params=
comment1.target=MyLinkedList()
comment10.params=
comment10.target=void\ clear()
comment2.params=
comment2.target=java.lang.Object\ getFirst()
comment2.text=Return\ the\ head\ element\ in\ the\ list
comment3.params=
comment3.target=java.lang.Object\ getLast()
comment3.text=Return\ the\ last\ element\ in\ the\ list
comment4.params=e
comment4.target=void\ prepend(java.lang.Object)
comment4.text=Add\ an\ element\ to\ the\ beginning\ of\ the\ list
comment5.params=item
comment5.target=void\ append(java.lang.Object)
comment5.text=Add\ an\ element\ to\ the\ end\ of\ the\ list
comment6.params=
comment6.target=java.lang.Object\ removeFirst()
comment6.text=\ Remove\ the\ head\ node\ and\r\nreturn\ the\ object\ that\ is\ contained\ in\ the\ removed\ node.
comment7.params=paramList
comment7.target=MyLinkedList\ merge(MyLinkedList)
comment7.text=This\ method\ merges\ two\ lists.\ If\ both\ lists\ (calling\ list\ and\ the\ parameter\ list)\ are\ empty,\ then\ an\ empty\r\n\ list\ is\ returned.\ If\ the\ calling\ list\ is\ empty\ and\ the\ parameter\ list\ isn't,\ then\ the\ parameter\ list\ is\ returned.\r\n\ If\ the\ calling\ list\ is\ not\ empty\ and\ the\ parameter\ list\ is\ empty,\ then\ the\ calling\ list\ is\ returned.\r\nOtherwise,\ if\ both\ lists\ are\ not\ empty,\ they\ are\ merged\ and\ the\ result\ list\ is\ returned.*
comment8.params=item
comment8.target=boolean\ delete(java.lang.Object)
comment9.params=
comment9.target=java.lang.String\ toString()
numComments=11
